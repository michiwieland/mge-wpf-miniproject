<controls:MetroWindow
         x:Class="SunriseClock.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:converter="clr-namespace:SunriseClock.Converter"
        mc:Ignorable="d"
        Title="Sunrise Clock" 
        Padding="30"
        GlowBrush="{DynamicResource AccentColorBrush}"
        WindowStartupLocation="CenterScreen" Height="480"  Width="900">

    <Border Padding="20 0">
        
        <DockPanel DataContext="{Binding Configuration.Alarms}">
           
            <!-- Button Toolbar -->
            <StackPanel Style="{StaticResource ButtonToolbarStyle}" Margin="0, 10">
                <ToggleButton IsChecked="{Binding ElementName=configurationFlyout, Path=IsOpen}" Style="{DynamicResource CircleToggleButtonStyle}">
                    <iconPacks:PackIconFontAwesome Width="20" Height="20" Kind="Cog"  />
                </ToggleButton>

                <Button Style="{DynamicResource CircleButtonStyle}" CommandParameter="{Binding}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.AlarmAddCommand}">
                    <iconPacks:PackIconFontAwesome Width="20" Height="20" Kind="Plus" />
                </Button>
            </StackPanel>

            <!-- Alarm List -->
            <StackPanel>
                <ListBox x:Name="AlarmListBox" ItemsSource="{Binding}" Width="350" Height="350" Style="{StaticResource ListBoxStyle}" Foreground="Black">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding AlarmTime, StringFormat=hh\\:mm}"  Margin="0 0 10 0" />
                                <TextBlock Text="{Binding Name}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>

            <!-- Alarm Detail -->
            <StackPanel Margin="50, 0">
                <StackPanel.Resources>
                    <converter:DateTimeConverter x:Key="DateTimeConverter"/>
                </StackPanel.Resources>
                
                <Label Content="Wecker Name" />
                <TextBox controls:TextBoxHelper.Watermark="Wecker Name" Text="{Binding Name}" />
                
                <Label Content="Weckzeit" />
                <controls:TimePicker controls:TextBoxHelper.Watermark="Weckzeit" SelectedTime="{Binding AlarmTime, Converter={StaticResource DateTimeConverter}}" Culture="de-de" />
                
                <Label Content="Erleuchtungszeit" />
                <TextBox controls:TextBoxHelper.Watermark="Erleuchtungszeit" Text="{Binding EnlightDuration}" />
                
                <Label Content="Lichtdauer" />
                <TextBox controls:TextBoxHelper.Watermark="Lichtdauer" Text="{Binding LightDuration}" />

                <Label Content="Aktiviert" />
                <controls:ToggleSwitch IsChecked="{Binding Enabled}"/>

            </StackPanel>
            
            <StackPanel DockPanel.Dock="Right">
                <Label Content="Wochentage" />
                <controls:ToggleSwitch OffLabel="Montag" OnLabel="Montag" IsChecked="{Binding Monday}" />
                <controls:ToggleSwitch OffLabel="Dienstag" OnLabel="Dienstag" IsChecked="{Binding Tuesday}" />
                <controls:ToggleSwitch OffLabel="Mittwoch" OnLabel="Mittwoch" IsChecked="{Binding Wednesday}" />
                <controls:ToggleSwitch OffLabel="Donnerstag" OnLabel="Donnerstag" IsChecked="{Binding Thursday}" />
                <controls:ToggleSwitch OffLabel="Freitag" OnLabel="Freitag" IsChecked="{Binding Friday}" />
                <controls:ToggleSwitch OffLabel="Samstag" OnLabel="Samstag" IsChecked="{Binding Saturday}" />
                <controls:ToggleSwitch OffLabel="Sonntag" OnLabel="Sonntag" IsChecked="{Binding Sunday}" />

                <StackPanel Style="{StaticResource ButtonToolbarStyle}" HorizontalAlignment="Right">
                    <Button Style="{DynamicResource CircleButtonStyle}" CommandParameter="{Binding ElementName=AlarmListBox,Path=SelectedItem }" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.AlarmSaveCommand }">
                        <iconPacks:PackIconFontAwesome Width="20" Height="20" Kind="FloppyOutline" />
                    </Button>
                    <Button Style="{DynamicResource CircleButtonStyle}" CommandParameter="{Binding ElementName=AlarmListBox,Path=SelectedItem}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.AlarmDeleteCommand }" >
                        <iconPacks:PackIconFontAwesome Width="20" Height="20" Kind="Trash" />
                    </Button>
                </StackPanel>
            </StackPanel>

            
        </DockPanel>
    </Border>

    <!-- Configuration -->
    <controls:MetroWindow.Flyouts >
        <controls:FlyoutsControl>
            <controls:Flyout x:Name="configurationFlyout" Header="Configuration" Position="Right" Width="200"  DataContext="{Binding Host}">
                <Border Padding="10">
                    <StackPanel VerticalAlignment="Top">
                        <Label Content="Hostname"/>
                        <TextBox controls:TextBoxHelper.Watermark="Hostname" Text="{Binding Name}" />
                        <Label Content="Port"/>
                        <TextBox controls:TextBoxHelper.Watermark="Port" Text="{Binding Port}" />
                    </StackPanel>
                </Border>
            </controls:Flyout> >
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>

</controls:MetroWindow>
